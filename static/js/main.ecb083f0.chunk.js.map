{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","placeholder","onChange","this","Component","ItemStatusFilter","buttons","name","label","filter","onFilterChange","map","clazz","type","key","onClick","TodoListItem","onDeleted","onToggleImportant","onToggleDone","classNames","important","TodoList","todos","elements","item","id","itemProps","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","ID","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","items","search","length","toLowerCase","indexOf","arr","propName","oldItem","visibleItems","doneCount","todoCount","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ecb083f0.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>My Todo List</h1>\r\n      <h2>\r\n        {toDo} more to do, {done} done\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n  state = {\r\n    term: ''\r\n  };\r\n\r\n  onSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    this.setState({ term });\r\n    this.props.onSearchChange(term);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          className=\"form-control search-input\"\r\n          placeholder=\"Type here to search\"\r\n          onChange={this.onSearchChange}\r\n          value={this.state.term}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ItemStatusFilter from './item-status-filter';\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n  buttons = [\r\n    { name: 'all', label: 'All' },\r\n    { name: 'active', label: 'Active' },\r\n    { name: 'done', label: 'Done' }\r\n  ];\r\n\r\n  render() {\r\n    const { filter, onFilterChange } = this.props;\r\n\r\n    const buttons = this.buttons.map(({ name, label }) => {\r\n      const isActive = filter === name;\r\n      const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n      return (\r\n        <button\r\n          type=\"button\"\r\n          className={`btn ${clazz}`}\r\n          key={name}\r\n          onClick={() => onFilterChange(name)}\r\n        >\r\n          {label}\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return <div className=\"btn-group item-status\">{buttons}</div>;\r\n  }\r\n}\r\n","import TodoListItem from './todo-list-item';\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n  render() {\r\n    const {\r\n      label,\r\n      onDeleted,\r\n      onToggleImportant,\r\n      onToggleDone,\r\n      done,\r\n      important\r\n    } = this.props;\r\n\r\n    let classNames = 'todo-list-item';\r\n    if (done) {\r\n      classNames += ' done';\r\n    }\r\n\r\n    if (important) {\r\n      classNames += ' important';\r\n    }\r\n\r\n    return (\r\n      <span className={classNames}>\r\n        <span className=\"todo-list-item-label\" onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-danger btn-sm\"\r\n          onClick={onDeleted}\r\n        >\r\n          <i className=\"fa fa-trash-o\"></i>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-success btn-sm\"\r\n          onClick={onToggleImportant}\r\n        >\r\n          <i className=\"fa fa-exclamation\"></i>\r\n        </button>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import TodoList from './todo-list';\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleDone, onToggleImportant}) => {\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n    \r\n    return (\r\n      <li key={id} className = \"list-group-item\">\r\n        <TodoListItem \r\n          {...itemProps}\r\n          onDeleted = {() => onDeleted(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n          onToggleImportant={() => onToggleImportant(id)} />\r\n      </li>\r\n    )\r\n  })\r\n  return (\r\n    <ul className = \"list-group todo-list\">\r\n      {elements}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;","import ItemAddForm from './item-add-form';\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\nimport './item-add-form.css'\r\n\r\nexport default class ItemAddForm extends Component {\r\n      \r\n  state = {\r\n    label: ''\r\n  }\r\n\r\n  onLabelChange = (e) => {\r\n    this.setState({\r\n      label: e.target.value\r\n    })\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onItemAdded(this.state.label);\r\n    this.setState({\r\n      label: ''\r\n    })\r\n  };\r\n  \r\n  render() {\r\n\r\n    return (\r\n      <form className=\"d-flex add-item-group\" \r\n            onSubmit={this.onSubmit}>\r\n        <input\r\n        className='form-control new-item-input'\r\n        onChange={this.onLabelChange}\r\n        value={this.state.label}\r\n        placeholder='Add new item...'/>\r\n        <button \r\n            type=\"submit\"\r\n            className=\"btn btn-outline-primary\">Add</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n  // const TodoList = ({todos}) => {\r\n  //   const elements = todos.map((item) => {\r\n  //     const { id, ...itemProps } = item;\r\n      \r\n  //     return (\r\n  //       <li className = \"list-group-item\">\r\n  //         <TodoListItem {...itemProps} />\r\n  //       </li>)\r\n  //   })\r\n  //   return (\r\n  //     <ul className = \"list-group todo-list\">\r\n  //       {elements}\r\n  //     </ul>\r\n  //   );\r\n  // };","import App from './app';\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport TodoList from '../todo-list';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n  ID = 1;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Drink Coffee'),\r\n      this.createTodoItem('Make Awesome App'),\r\n      this.createTodoItem('Make Lunch')\r\n    ],\r\n    term: '',\r\n    filter: 'all'\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.ID++\r\n    };\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const idx = todoData.findIndex((el) => el.id === id);\r\n      const newArr = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\r\n      return {\r\n        todoData: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n\r\n    this.setState(({ todoData }) => {\r\n      const newArr = [...todoData, newItem];\r\n      return {\r\n        todoData: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n    const oldItem = arr[idx];\r\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\r\n  }\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      };\r\n    });\r\n  };\r\n\r\n  filter = (items, filter) => {\r\n    switch (filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter((item) => !item.done);\r\n      case 'done':\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    }\r\n  };\r\n\r\n  search = (items, term) => {\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n    });\r\n  };\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({ term });\r\n  };\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  render() {\r\n    const { todoData, term, filter } = this.state;\r\n    const visibleItems = this.filter(this.search(todoData, term), filter);\r\n    const doneCount = todoData.filter((el) => el.done === true).length;\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n        <div className=\"top-panel\">\r\n          <SearchPanel onSearchChange={this.onSearchChange} />\r\n          <ItemStatusFilter\r\n            filter={filter}\r\n            onFilterChange={this.onFilterChange}\r\n          />\r\n        </div>\r\n        <TodoList\r\n          todos={visibleItems}\r\n          onDeleted={this.deleteItem}\r\n          onToggleDone={this.onToggleDone}\r\n          onToggleImportant={this.onToggleImportant}\r\n        />\r\n        <ItemAddForm onItemAdded={this.addItem} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App/>, document.querySelector('#root'));\r\n"],"sourceRoot":""}